/* Curso de Css */
/* custome properties */
:root{
    --blanco: #FFFFFF;
    --oscuro: #212121;
    --primario: #ffc107;
    --secundario: #0097a7;
    --gris:#757575;
    --fuente-principal: 3.8rem;
}

html{
    font-size: 62.5%;
    /* Fragmento de codigo para facilitar el uso de "BoxModel" */
    box-sizing: border-box;
}

/*Fragmento de codigo para facilitar el uso de "BoxModel" extraido de una pagina de un dise√±ador de Google*/
*,*::before, *::after{
    box-sizing: inherit;
}

body{
    font-size: 16px; /*1rem = 10px */ 
    font-family: 'Krub', sans-serif;
    /*Codigo para generar degradado en el fondo, los parametros son linear-gradiente(hacia donde, color inferior (0%), color superiror(0%))*/
    background-image: linear-gradient(to top, #DFE9F3 0%, var(--blanco) 100%);   
}

.sombra{
    /*NOTA: -webkit- y -moz- son codigo para generar compatibilidad con ciertos navegadores con respecto a la propiedad utilizada
        --webkit- para chrome
        -moz- para mozilla*/
    -webkit-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
    -moz-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
    box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 1rem;
}

h1{
    font-size: 3.8rem;
}

h2{
    font-size: 2.8rem;
}

h3{
    font-size: 1.8rem;
}

h1,h2,h3{
    text-align: center;
}

.titulo span{
    font-size: 2rem;
}

.contenedor{
    max-width: 120rem;
    margin: 0 auto;
}

.boton{
    background-color: var(--secundario);
    color: var(--blanco);
    padding: 1rem 3rem;
    margin-top: 1rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: .5rem;
    width: 90%;
    text-align: center;
}

@media (min-width: 768px){
    .boton{
        width: auto;
    }
}

.nav-bg{
    background-color: var(--secundario);
}

.navegacion-principal{
    display: flex;
    flex-direction: column;
}

/* Medias Querie regulares 

    480px = Telefono
    768px = Tablet
    1140px = Laptop
    1400px = Computadora
*/

@media (min-width: 768px){
    .navegacion-principal{
        flex-direction: row;
        justify-content: space-between;
    }
}

.navegacion-principal a{
    display: block;
    text-align: center;
    color: var(--blanco);
    text-decoration: none;
    font-size: 2rem;
    font-weight: bold;
    padding: 1rem;
}

.navegacion-principal a:hover{
    background-color: var(--primario);
    color: var(--oscuro);
}
.hero {
    background-image: url(../img/hero.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    /*A estas medidas se le aplica el modelo caja (box model) para que el padding no perturbe las medidas totales
    del elemento
    */
    height: 450px;
    /*Se especifica la posicion de los elementos, donde le padre siempre tiene que ser relativo y el hijo absoluto
        Esto es necesario porque si el padre no tiene posicion relativa, el hijo tomara la posicion absoluta desde
        todo el documento
    */
    position: relative;
    margin-bottom: 2rem;
}

.contenido-hero{
    position: absolute;
    background-color: rgba(0, 0, 0, .7); /**Metodo antiguo para opacidad**/
    background-color: rgb(0 0 0 / 70%); /*Metodo nuevo, pero con menos soporte para navegadores (Puedo dejar ambos por si el nuevo no se toma)*/
    width: 100%;
    height: 100%;
    /*Cordenadas: TOP, LEFT, BOTTOM, RIGHT*/

    /*Este codigo permite alinear tanto vertical como horizontal
    con align-items y justify-content, es necesario el display flex
    para que funcione
    */
    display: flex; /*Coloca el contenido alineado*/
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.contenido-hero h2, .contenido-hero p{
    color: var(--blanco);
}

.ubicacion{
    display: flex;
    align-items: flex-end;
}